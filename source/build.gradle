// all external libraries required by all the project is listed in libraries.gradle.
// Apply this class to use all jar files.
apply from: "libraries.gradle"

// Common for all project define here
allprojects {
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'eclipse'
	//apply plugin: 'idea'
	//apply plugin: 'distribution'


	dependencies {
        compileOnly libraries.lombok
    	annotationProcessor libraries.lombokProcessor
		testCompileOnly libraries.lombok
    	testAnnotationProcessor libraries.lombokProcessor
    }

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}


	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}
	
	repositories {
    	mavenCentral()
		flatDir {dirs "${rootDir}/libs"}
	}

	task checkVersion {
		doLast {
			if(!hasVersion("version")) {
				// TODO: Add this validation later once development is done.
				//throw new GradleException ("Property 'version' is missing. Specify using '-Pversion=' command line option")
			}
		}
	}

	task printJars {
		doLast {
			configurations.runtimeClasspath.resolvedConfiguration.resolvedArtifacts.each { artifact ->
				println artifact.file
			}
		}
	}
	project.ext.hasVersion = { prop ->
		return project.hasProperty("${prop}") 
				&& project[prop] 
				&& project[prop] != project.DEFAULT_VERSION
	}

	compileJava.dependsOn(checkVersion)
}


/*
ext {
	set('snippetsDir', file("build/generated-snippets"))
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
*/